<?php
// vnpay_debug.php - Tool debug chi ti·∫øt
session_start();
include_once(__DIR__ . '/../../config/config.php');

$vnp_HashSecret = "1X2OLL0XP2AAAOFBUYVYKU11GAPH6TE3";

echo "<!DOCTYPE html>";
echo "<html><head><title>VNPay Debug</title>";
echo "<style>
body { font-family: Arial; margin: 20px; }
.section { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }
.error { background: #ffebee; border-left: 4px solid #f44336; }
.success { background: #e8f5e9; border-left: 4px solid #4caf50; }
.warning { background: #fff3e0; border-left: 4px solid #ff9800; }
.code { background: #263238; color: #fff; padding: 10px; border-radius: 3px; font-family: monospace; overflow-x: auto; }
table { width: 100%; border-collapse: collapse; margin: 10px 0; }
th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
th { background: #f2f2f2; }
</style>";
echo "</head><body>";

echo "<h1>üîç VNPay Debug Tool</h1>";

// 1. Ki·ªÉm tra GET parameters
echo "<div class='section'>";
echo "<h2>üì• GET Parameters t·ª´ VNPay:</h2>";
if (empty($_GET)) {
    echo "<div class='warning'>‚ö†Ô∏è Kh√¥ng c√≥ GET parameters. ƒê√¢y c√≥ th·ªÉ l√† l·∫ßn ƒë·∫ßu truy c·∫≠p.</div>";
} else {
    echo "<table>";
    echo "<tr><th>Parameter</th><th>Value</th><th>Length</th></tr>";
    foreach ($_GET as $key => $value) {
        echo "<tr><td>$key</td><td>" . htmlspecialchars($value) . "</td><td>" . strlen($value) . "</td></tr>";
    }
    echo "</table>";
}
echo "</div>";

if (!empty($_GET)) {
    // 2. T√°ch c√°c tham s·ªë VNPay
    echo "<div class='section'>";
    echo "<h2>üîë VNPay Parameters:</h2>";
    $vnpParams = array();
    $otherParams = array();
    
    foreach ($_GET as $key => $value) {
        if (substr($key, 0, 4) == "vnp_") {
            $vnpParams[$key] = $value;
        } else {
            $otherParams[$key] = $value;
        }
    }
    
    if (!empty($vnpParams)) {
        echo "<table>";
        echo "<tr><th>VNP Parameter</th><th>Value</th></tr>";
        foreach ($vnpParams as $key => $value) {
            echo "<tr><td>$key</td><td>" . htmlspecialchars($value) . "</td></tr>";
        }
        echo "</table>";
    }
    
    if (!empty($otherParams)) {
        echo "<h3>Non-VNP Parameters:</h3>";
        echo "<table>";
        echo "<tr><th>Parameter</th><th>Value</th></tr>";
        foreach ($otherParams as $key => $value) {
            echo "<tr><td>$key</td><td>" . htmlspecialchars($value) . "</td></tr>";
        }
        echo "</table>";
    }
    echo "</div>";

    // 3. L·∫•y hash t·ª´ VNPay
    $receivedHash = $_GET['vnp_SecureHash'] ?? '';
    echo "<div class='section'>";
    echo "<h2>üîê Hash t·ª´ VNPay:</h2>";
    echo "<div class='code'>$receivedHash</div>";
    echo "</div>";

    // 4. Chu·∫©n b·ªã data ƒë·ªÉ t√≠nh hash
    echo "<div class='section'>";
    echo "<h2>‚öôÔ∏è Chu·∫©n b·ªã d·ªØ li·ªáu cho hash:</h2>";
    
    // Lo·∫°i b·ªè vnp_SecureHash
    $inputData = $vnpParams;
    unset($inputData['vnp_SecureHash']);
    
    echo "<h3>üìã Data sau khi lo·∫°i b·ªè vnp_SecureHash:</h3>";
    echo "<table>";
    echo "<tr><th>Key</th><th>Value</th><th>URL Encoded Key</th><th>URL Encoded Value</th></tr>";
    foreach ($inputData as $key => $value) {
        echo "<tr><td>$key</td><td>" . htmlspecialchars($value) . "</td><td>" . urlencode($key) . "</td><td>" . urlencode($value) . "</td></tr>";
    }
    echo "</table>";
    
    // Lo·∫°i b·ªè gi√° tr·ªã r·ªóng
    $filteredData = array_filter($inputData, function($value) {
        return $value !== null && $value !== '';
    });
    
    if (count($filteredData) != count($inputData)) {
        echo "<h3>üßπ Data sau khi lo·∫°i b·ªè gi√° tr·ªã r·ªóng:</h3>";
        echo "<table>";
        echo "<tr><th>Key</th><th>Value</th></tr>";
        foreach ($filteredData as $key => $value) {
            echo "<tr><td>$key</td><td>" . htmlspecialchars($value) . "</td></tr>";
        }
        echo "</table>";
        $inputData = $filteredData;
    } else {
        echo "<div class='success'>‚úÖ Kh√¥ng c√≥ gi√° tr·ªã r·ªóng n√†o c·∫ßn lo·∫°i b·ªè.</div>";
    }
    
    // S·∫Øp x·∫øp
    ksort($inputData);
    echo "<h3>üî§ Data sau khi s·∫Øp x·∫øp theo key:</h3>";
    echo "<table>";
    echo "<tr><th>Order</th><th>Key</th><th>Value</th></tr>";
    $order = 1;
    foreach ($inputData as $key => $value) {
        echo "<tr><td>$order</td><td>$key</td><td>" . htmlspecialchars($value) . "</td></tr>";
        $order++;
    }
    echo "</table>";
    echo "</div>";

    // 5. T·∫°o hash string theo t·ª´ng b∆∞·ªõc
    echo "<div class='section'>";
    echo "<h2>üîó T·∫°o Hash String:</h2>";
    
    $hashParts = array();
    foreach ($inputData as $key => $value) {
        $hashParts[] = urlencode($key) . "=" . urlencode($value);
    }
    
    echo "<h3>üìù C√°c ph·∫ßn c·ªßa hash string:</h3>";
    echo "<ol>";
    foreach ($hashParts as $part) {
        echo "<li><code>" . htmlspecialchars($part) . "</code></li>";
    }
    echo "</ol>";
    
    $hashString = implode('&', $hashParts);
    echo "<h3>üîó Hash string ho√†n ch·ªânh:</h3>";
    echo "<div class='code'>" . htmlspecialchars($hashString) . "</div>";
    echo "<p><strong>Length:</strong> " . strlen($hashString) . " characters</p>";
    echo "</div>";

    // 6. T√≠nh hash v·ªõi secret key
    echo "<div class='section'>";
    echo "<h2>üîê T√≠nh to√°n Hash:</h2>";
    echo "<p><strong>Secret Key:</strong> <code>$vnp_HashSecret</code></p>";
    echo "<p><strong>Hash Algorithm:</strong> HMAC-SHA512</p>";
    
    $calculatedHash = hash_hmac('sha512', $hashString, $vnp_HashSecret);
    
    echo "<h3>üßÆ Hash t√≠nh ƒë∆∞·ª£c:</h3>";
    echo "<div class='code'>$calculatedHash</div>";
    echo "</div>";

    // 7. So s√°nh hash
    echo "<div class='section'>";
    echo "<h2>‚öñÔ∏è So s√°nh Hash:</h2>";
    
    echo "<table>";
    echo "<tr><th>Lo·∫°i</th><th>Hash Value</th><th>Length</th></tr>";
    echo "<tr><td>Hash t·ª´ VNPay</td><td class='code'>" . htmlspecialchars($receivedHash) . "</td><td>" . strlen($receivedHash) . "</td></tr>";
    echo "<tr><td>Hash t√≠nh ƒë∆∞·ª£c</td><td class='code'>" . htmlspecialchars($calculatedHash) . "</td><td>" . strlen($calculatedHash) . "</td></tr>";
    echo "</table>";
    
    if ($calculatedHash === $receivedHash) {
        echo "<div class='success'>";
        echo "<h3>‚úÖ HASH KH·ªöP - Ch·ªØ k√Ω h·ª£p l·ªá!</h3>";
        echo "</div>";
    } else {
        echo "<div class='error'>";
        echo "<h3>‚ùå HASH KH√îNG KH·ªöP - Ch·ªØ k√Ω kh√¥ng h·ª£p l·ªá!</h3>";
        echo "</div>";
        
        // So s√°nh t·ª´ng k√Ω t·ª±
        echo "<h3>üîç So s√°nh t·ª´ng k√Ω t·ª±:</h3>";
        $maxLen = max(strlen($receivedHash), strlen($calculatedHash));
        echo "<table>";
        echo "<tr><th>Position</th><th>VNPay Hash</th><th>Calculated Hash</th><th>Match</th></tr>";
        
        for ($i = 0; $i < $maxLen; $i++) {
            $vnpChar = isset($receivedHash[$i]) ? $receivedHash[$i] : 'N/A';
            $calcChar = isset($calculatedHash[$i]) ? $calculatedHash[$i] : 'N/A';
            $match = ($vnpChar === $calcChar) ? '‚úÖ' : '‚ùå';
            
            echo "<tr><td>$i</td><td>$vnpChar</td><td>$calcChar</td><td>$match</td></tr>";
            
            if ($i > 20 && $vnpChar !== $calcChar) {
                echo "<tr><td colspan='4'>... (continuing differences) ...</td></tr>";
                break;
            }
        }
        echo "</table>";
    }
    echo "</div>";

    // 8. Ki·ªÉm tra k·∫øt qu·∫£ giao d·ªãch
    if ($calculatedHash === $receivedHash) {
        echo "<div class='section'>";
        echo "<h2>üìä K·∫øt qu·∫£ giao d·ªãch:</h2>";
        
        $responseCode = $_GET['vnp_ResponseCode'] ?? '';
        $transactionStatus = $_GET['vnp_TransactionStatus'] ?? '';
        $amount = ($_GET['vnp_Amount'] ?? 0) / 100;
        $txnRef = $_GET['vnp_TxnRef'] ?? '';
        
        echo "<table>";
        echo "<tr><td><strong>M√£ ph·∫£n h·ªìi</strong></td><td>$responseCode</td></tr>";
        echo "<tr><td><strong>Tr·∫°ng th√°i giao d·ªãch</strong></td><td>$transactionStatus</td></tr>";
        echo "<tr><td><strong>S·ªë ti·ªÅn</strong></td><td>" . number_format($amount) . " VNƒê</td></tr>";
        echo "<tr><td><strong>M√£ giao d·ªãch</strong></td><td>$txnRef</td></tr>";
        echo "</table>";
        
        if ($responseCode == '00' && $transactionStatus == '00') {
            echo "<div class='success'><h3>‚úÖ Giao d·ªãch th√†nh c√¥ng!</h3></div>";
        } else {
            echo "<div class='error'><h3>‚ùå Giao d·ªãch th·∫•t b·∫°i!</h3></div>";
        }
        echo "</div>";
    }
}

// 9. Test t·∫°o hash m·∫´u
echo "<div class='section'>";
echo "<h2>üß™ Test Hash Generation:</h2>";
echo "<p>Test v·ªõi d·ªØ li·ªáu m·∫´u ƒë·ªÉ ki·ªÉm tra thu·∫≠t to√°n:</p>";

$sampleData = array(
    'vnp_Amount' => '10000000',
    'vnp_Command' => 'pay',
    'vnp_CreateDate' => '20231221120000',
    'vnp_CurrCode' => 'VND',
    'vnp_IpAddr' => '127.0.0.1',
    'vnp_Locale' => 'vn',
    'vnp_OrderInfo' => 'Test payment',
    'vnp_OrderType' => 'billpayment',
    'vnp_ReturnUrl' => 'http://localhost/return',
    'vnp_TmnCode' => '18NMDM3B',
    'vnp_TxnRef' => '12345678',
    'vnp_Version' => '2.1.0'
);

ksort($sampleData);

$sampleHashString = '';
$i = 0;
foreach ($sampleData as $key => $value) {
    if ($i == 1) {
        $sampleHashString .= '&' . urlencode($key) . "=" . urlencode($value);
    } else {
        $sampleHashString .= urlencode($key) . "=" . urlencode($value);
        $i = 1;
    }
}

$sampleHash = hash_hmac('sha512', $sampleHashString, $vnp_HashSecret);

echo "<p><strong>Sample Hash String:</strong></p>";
echo "<div class='code'>" . htmlspecialchars($sampleHashString) . "</div>";
echo "<p><strong>Sample Hash:</strong></p>";
echo "<div class='code'>$sampleHash</div>";
echo "</div>";

echo "<div class='section'>";
echo "<h2>üîß H∆∞·ªõng d·∫´n s·ª≠a l·ªói:</h2>";
echo "<ol>";
echo "<li>Ki·ªÉm tra URL return c√≥ ch√≠nh x√°c kh√¥ng</li>";
echo "<li>ƒê·∫£m b·∫£o secret key ƒë√∫ng: <code>1X2OLL0XP2AAAOFBUYVYKU11GAPH6TE3</code></li>";
echo "<li>Ki·ªÉm tra encoding (UTF-8)</li>";
echo "<li>ƒê·∫£m b·∫£o kh√¥ng c√≥ space th·ª´a trong d·ªØ li·ªáu</li>";
echo "<li>Ki·ªÉm tra th·ª© t·ª± s·∫Øp x·∫øp parameters</li>";
echo "</ol>";
echo "</div>";

echo "</body></html>";
?>